#!/usr/bin/env ruby

require 'bundler/setup'
require 'etc'

$LOAD_PATH.unshift(File.expand_path('../lib', __dir__))
require 'web_counter_server'

class Fibonacci
  def initialize
    @cache = {}
  end

  def calculate(number)
    @cache[number] ||= if number.zero?
                         0
                       elsif number == 1
                         1
                       else
                         calculate(number - 2) + calculate(number - 1)
                       end
  end
end

Thread.new do
  usage = WebCounterServer::Usage.new(Process.pid)

  loop do
    print "#{usage.build_usage.strip}\r"
    sleep(0.5)
  end
end

counter = 0
fibonacci = Fibonacci.new

WebCounterServer.start do |request, response|
  counter = 0 if request.headers['X-INIT-COUNTER']

  response.set_status(200)
  response.headers['Content-Type'] = 'text/plain'

  counter += 1

  response.set_body("#{counter}: #{fibonacci.calculate(counter)}\n")
end
